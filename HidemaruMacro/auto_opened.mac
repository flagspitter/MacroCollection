setcompatiblemode 0x2020c;

if( iskeydown( 16 ) )
{
	; // shiftが押されているならば、自動実行しない
}
else if( filetype == ".gcov" )
{
	title basename + " - カバレッジログのカラーリング中";
	call color_gcov;
}
else if( filetype == ".hmbook" )
{
	// プロジェクト
	searchdown2 "//.+type=project", regular;
	if( result == true )
	{
		searchdown2 "^\"", regular;
		right;
		beginsel;
		searchdown "\"", regular;
		$$tmp = gettext( seltopx, seltopy, selendx, selendy );
		
		loaddll "HmExplorerPane.dll";
		##ret = dllfunc( "LoadProject", hidemaruhandle(0), filename );
		freedll;
		
		openfile $$tmp;
	}
}
else if( filetype == ".cs" )
{
	// C#のソースファイル
	if(0)
	{
		##x = x;
		##y = y;
		
		disabledraw;
		gofileend;
		searchup2 "#region";
		while( result == true )
		{
			fold;
			findup;
		}
		moveto ##x, ##y;
		enabledraw;
	}
	else
	{
		##x = x;
		##y = y;
		
		foldall 0x10;
		
		moveto ##x, ##y;
	}
}
else
{
	// Always
	execmacro "RestoreFold.mac";
}

endmacro;

color_gcov:
	// gcov のログに色をつける
	
	////////////////////////////////////////
	// postprocess
	setcompatiblemode 0x020c;
	$$searchBuf = searchbuffer;
	##searchOpt = searchoption;
	##orgX = x;
	##orgY = y;
	disabledraw;
	begingroupundo;
	////////////////////////////////////////
	
	// 通常の前置情報
	gofiletop;
	searchdown2 "^.+?:.+?:", regular;
	while( result == true )
	{
		colormarker -1, 0x444444;
		finddown;
	}
	
	// ソース情報
	gofiletop;
	searchdown2 "^.+?:.+? 0:.+", regular;
	while( result == true )
	{
		colormarker -1, 0x444444;
		finddown;
	}
	
	// 関数の入り口
	gofiletop;
	searchdown2 "^function.+", regular;
	while( result == true )
	{
		colormarker -1, 0x008800;
		finddown;
	}
	
	// 分岐情報
	gofiletop;
	searchdown2 "^branch.+", regular;
	while( result == true )
	{
		colormarker -1, 0x880000;
		finddown;
	}
	
	// 関数呼び出し
	gofiletop;
	searchdown2 "^call.+", regular;
	while( result == true )
	{
		colormarker -1, 0x880000;
		finddown;
	}
	
	// 未実行ステートメント - C0
	gofiletop;
	searchdown2 "^.+#####:.+?:", regular;
	// searchdown2 "^.+#####:.+:.+", regular; // 行全体に色をつける場合
	while( result == true )
	{
		colormarker -1, 0x000088;
		finddown;
	}
	
	// 未実行分岐類・その１ - C0
	gofiletop;
	searchdown2 "^function \\c.+ ((.%)|(..%)).*", regular;
	while( result == true )
	{
		colormarker -1, 0x000088;
		finddown;
	}
	
	// 未実行分岐類・その２ - C1
	gofiletop;
	searchdown2 "^branch +\\c.+ 0%.*", regular;
	while( result == true )
	{
		colormarker -1, 0x008888;
		finddown;
	}
	
	// 未実行分岐類・その２ - C0
	gofiletop;
	searchdown2 "^\\c.+never executed", regular;
	while( result == true )
	{
		colormarker -1, 0x000088;
		finddown;
	}
	
	// 未返却関数
	gofiletop;
	searchdown2 "^call.+returned ([1-9][0-9]%|[1-9]%)", regular;
	while( result == true )
	{
		colormarker -1, 0x0000ff;
		finddown;
	}
	
	////////////////////////////////////////
	// postprocess
	moveto ##orgX, ##orgY;
	enabledraw;
	setsearch $$searchBuf, ##searchOpt;
	////////////////////////////////////////
	
	endgroupundo;
	
	return;
